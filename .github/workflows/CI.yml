name: CI

on: [pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black
        pip install -r requirements.txt

    - name: Run black
      run: black . --exclude venv migrations --check

  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U user"
          --health-interval 5s
          --health-timeout 3s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        pip install -r requirements.txt

    - name: Wait for PostgreSQL to be ready
      run: |
        for i in {1..10}; do
          if pg_isready -h localhost -p 5432 -U user; then
            echo "PostgreSQL is ready"
            break
          fi
          echo "Waiting for PostgreSQL..."
          sleep 1
        done

    - name: Run migrations
      env:
        DB_URL: postgresql+asyncpg://user:password@localhost:5432/test_db
      run: |
        alembic upgrade head

    - name: Run tests
      env:
        DB_URL: postgresql+asyncpg://user:password@localhost:5432/test_db
      run: pytest